str(plants)
d1<-Sys.Date()
class(d1)
exit()
quit()
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_91')
library(rJava)
setwd("DataScience")
list.files()
setwd("GettingData_Project")
list.files()
X_test<-read.csv("./test/X_test.txt")
head(X_test)
features<-read.csv("./features.txt")
head(features)
activity_labels<-read.csv("./activity_labels.txt")
activity_labels
body_acc_x_train<-read.csv("./train/Inertial Signals/body_acc_x_train.txt")
head(body_acc_x_train)
str(body_acc_x_train)
subject_test<-read.csv("./train/subject_train.txt")
head(subject_test)
subject_test<-read.csv("./test/subject_test.txt")
subject_train<-read.csv("./train/subject_train.txt")
View(body_acc_x_train)
body_acc_x_train[1]
library(dplyr)
library(tidyr)
View(features)
View(subject_test)
View(subject_test)
View(subject_test)
?read.table
body_acc_x_train<-read.table("./train/Inertial Signals/body_acc_x_train.txt", header = FALSE, sep = "")
head(body_acc_x_train)
features<-read.table("./features.txt",header = FALSE, sep = "")
activity_labels<-read.table("./activity_labels.txt",header = FALSE, sep = "")
body_acc_x_train<-read.table("./train/Inertial Signals/body_acc_x_train.txt", header = FALSE, sep = "")
subject_test<-read.table("./test/subject_test.txt",header = FALSE, sep = "")
subject_train<-read.table("./train/subject_train.txt",header = FALSE, sep = "")
activity_labels
head(features)
View(subject_test)
View(subject_test)
View(subject_test)
X_test<-read.table("./test/X_test.txt",header = FALSE, sep = "")
X_train<-read.table("./train/X_train.txt",header = FALSE, sep = "")
View(features)
View(body_acc_x_train)
y_train<-read.table("./train/y_train.txt",header = FALSE, sep = "")
View(y_train)
?transform
y_test<-read.table("./test/y_test.txt",header = FALSE, sep = "")
class(features)
feature_names<-t(features[,2])
head (feature_names)
str(feature_names)
feature_names<-t(features)
View(feature_names)
feature_names<-feature_names[2,]
feature_names<-filter(feature_names, V2)
feature_names<-t(features)
feature_names<-filter(feature_names, V2)
feature_names<-as.data.frame(t(features))
feature_names<-filter(feature_names, V2)
feature_names<-filter(feature_names, index ==V2)
feature_names<-filter(feature_names, row.names==V2)
View(feature_names)
?rbind
feature_names<-as.list(features[,2])
?rename
rename(X_test, feature_names)
for(i in 561){
X_test1<-rename(X_test, feature_names[[i]])
X_train1<-rename(X_train, feature_names[[i]])
}
View(features)
View(features)
X_test1<-rename(X_test, V1 = "tBodyAcc-mean()-X" )
X_test1<-rename(X_test, V1 = tBodyAcc-mean()-X )
X_test1<-rename(X_test, tBodyAcc-mean()-X = V1 )
names(X_test)
X_test1<-rename(X_test, tBodyAcc-mean()-X = v1 )
X_test1<-rename(X_test, "tBodyAcc-mean()-X" = V1 )
head(X_test1, n= 1)
View(X_train)
full_set<-rbind(X_test, X_train)
full_subject<-rbind(subject_test, subject_train)
full_labels<-rbind(y_test, y_train)
rm(body_acc_x_train)
rm(X_test1)
for(i in 1:5){
#new_names<-rename(file, feature_names[[i]] = "V"i)
x<-"V"i
print(x)
}
for(i in 1:5){
#new_names<-rename(file, feature_names[[i]] = "V"i)
x<-paste("V", i, sep = "")
print(x)
}
for(i in 1:5){
new_names<-rename(X_test, feature_names[[i]] = paste("V", i, sep = ""))
}
feature_match<-grep("mean"| "std", features)
feature_match<-grep("-mean()", features)
feature_match<-grep("-mean()", features$V2)
feature_match<-grep("-mean()"|"-std()", features$V2)
feature_match<-grep(("-mean()"|"-std()"), features$V2)
feature_match<-grep((-mean()|-std()), features$V2)
feature_match<-grep((-mean|-std, features$V2)
feature_match<-grep(-mean|-std, features$V2)
feature_match<-grep("-mean()| -std()", features)
feature_match<-grep("-mean()| -std()", features$V2)
feature_match <- intersect(
grep("-mean()",x,fixed=TRUE),
grep("-std()",x,fixed=TRUE)
)
feature_match <- intersect(
grep("-mean()",features$V2,fixed=TRUE),
grep("-std()",features$V2,fixed=TRUE)
)
rm(feature_match)
rmi
rm(i)
rm(x)
feature_match <- intersect(
grep("-mean()",features$V2,fixed=TRUE),
grep("-std()",features$V2,fixed=TRUE)
)
feature_match <- intersect(
grep("-mean()",features$V2),
grep("-std()",features$V2)
)
rm(feature_match)
match_mean<-grep("-mean()", features$V2)
match_std<-grep("-std()", features$V2)
feature_match<-intersect(match_mean, match_std)
?intersect
library(dplyr)
?intersect
?intersect()
feature_match<-as.data.frame(intersect(match_mean, match_std)
)
rm(feature_match)
rm(feature_match)
match_mean<-grep("-mean()", features$V2, fixed = TRUE)
match_std<-grep("-std()", features$V2, fixed = TRUE)
feature_match<-grep("("-mean()")(" -std()")", features$V2)
feature_match<-grep("("-mean()")("-std()")", features$V2)
pattern<-"(?=.*mean)(?=.*std)"
feature_match<-grep(pattern, features$V2)
feature_match<-grep("(mean)(std)", features$V2)
feature_match<-grep("(-mean)(-std)", features$V2)
feature_match<-grep("(-mean)(-std)", features$V2, perl = TRUE)
feature_match<-grepl("(-mean)(-std)", features$V2, perl = TRUE)
feature_match<-grepl("(?=.*-mean)(?=.*-std)", features$V2, perl = TRUE)
head(feature_match)
rm(feature_match)
feature_match<- grep("-mean()",features$V2, fixed = TRUE) & grep("-std()",features$V2 fixed = TRUE)
feature_match<- grep("-mean()",features$V2, fixed = TRUE) & grep("-std()",features$V2 fixed=TRUE)
feature_match<- grep("-mean()",features$V2, fixed = TRUE)
& grep("-std()",features$V2 fixed=TRUE)
feature_match<- grep("-mean()",features$V2) & grep("-std()",features$V2)
feature_match<- grepl("-mean()",features$V2) & grepl("-std()",features$V2)
toMatch <- c("-mean()", "-std()")
feature_match <- unique (grep(paste(toMatch,collapse="|"),
features$V2, value=TRUE))
toMatch <- c("-mean()", "-std()")
feature_match <- unique (grep(paste(toMatch,collapse="|"),
features$V2, value=TRUE, fixed = TRUE))
toMatch <- c("-mean()", "-std()")
feature_match <- unique (grep(paste(toMatch,collapse="|"),
features$V2, value=TRUE))
toMatch <- c("-mean()", "-std()")
feature_match <- grep(paste(toMatch,collapse="|"),
features$V2, value=TRUE)
toMatch <- c("-mean()", "-std()")
feature_match <- unique (grep(paste(toMatch,collapse="|"),
features$V2, fixed = TRUE))
toMatch <- c("-mean()", "-std()")
feature_match <- unique (grep(paste(toMatch,collapse="|"),
features$V2))
toMatch <- c("-mean", "-std")
feature_match <- unique (grep(paste(toMatch,collapse="|"),
features$V2))
rm(match_mean)
rm(match_std)
rm(pattern)
head(full_set)
?match
index(full_set)
library(dplyr)
mean_std_set<-filter(full_set, feature_match)
mean_std_set<-filter(full_set, nrow==feature_match)
?filter
?(row_number)
?row_number
x<-c(5,1,3,2,2,NA)
row_number(x)
min_rank(x)
row_no<-row_number(full_set)
rm(row_no)
?index
full_set_index<-mutate(full_set, index = seq_along(full_set$V1))
head(full_set_index)
mean_std_set <-filter(full_set_index, feature_match %in% full_set_index$index)
mean_std_set <-filter(full_set_index, full_set_index$index %in% feature_match)
head(mean_std_set)
full_set_index<-mutate(full_set, index = seq_along(full_set$V1), label = full_labels, subject = full_subject)
View(full_labels)
View(full_labels)
full_set_index<-mutate(full_set, index = seq_along(full_set$V1), label = full_labels$V1, subject = full_subject$V1)
full_set_index<-mutate(full_set, c(index = seq_along(full_set$V1), label = full_labels$V1, subject = full_subject$V1))
full_set_index<-mutate(full_set, index = seq_along(full_set$V1))
full_set_index<-mutate(full_set_index, label = full_labels$V1)
full_set_index<-mutate(full_set_index, subject = full_subject$V1)
full_set_index<-mutate(full_set_index, label==full_labels$V1)
View(full_set_index)
?cbind
full_labels<-rename(full_labels, labels = full_labels$V1)
full_labels<-rename(full_labels, labels == full_labels$V1)
full_labels<-rename(full_labels, labels = V1)
head(full_labels)
full_subject<-rename(full_subject, subject = V1)
names(full_set)<-feature_names
head(full_set)
full_set<-rbind(X_test, X_train)
head(full_set)
feature_names<-as.list(features[,2])
head(feature_names)
rm(feature_names)
features[,2]
names(full_set)<-features[,2]
head(full_set)
full_subject<-rbind(subject_test, subject_train)
full_subject<-rename(full_subject, subject = V1)
full_labels<-rbind(y_test, y_train)
full_labels<-rename(full_labels, labels = V1)
full_set_index<-mutate(full_set, index = seq_along(full_set[1,]))
rm(full_set_index)
full_set_index<-mutate(full_set, index = seq_along(full_set))
View(full_set)
View(full_set)
full_set_index<-mutate(full_set, index = seq_along(full_set[,1]))
full_set_index<-mutate(full_set, index = seq_along(full_set[1,]))
first_col<-full_set[,1]
full_set_index<-mutate(full_set, index = seq_along(full_set[,1]))
index<-seq_len(length(full_set))
length(full_set)
nrow(full_set)
full_set_index<-mutate(full_set, index = seq_len(nrow(full_set)))
index<-seq_len(nrow(full_set))
full_set_index<-mutate(full_set, index = 1:10299)
unique<-unique(features$V2)
features<-read.table("./features.txt",header = FALSE, sep = "", stringsAsFactors = FALSE) ##List of all features
View(features)
View(features)
str(features)
full_set<-rbind(X_test, X_train)
##convert features to variable headings
names(full_set)<-features[,2]
full_set_index<-mutate(full_set, index = seq_len(nrow(full_set)))
unique<-unique(features$V2)
full_set<-rbind(X_test, X_train)
? select
mean_std_set <-select(full_set, num_range("V", feature_match))
mean_std_features<-filter(features, features$V2 %in% feature_match)
mean_std_features<-filter(features, features$V1 %in% feature_match)
names(mean_std_set)<-mean_std_features[,2]
unique<-unique(mean_std_features)
rm(unique)
head(mean_std_set)
mean_std_set<-cbind(mean_std_set, full_labels)
View(mean_std_set)
mean_std_set<-mutate(mean_std_set, -labels)
mean_std_set<-select(mean_std_set, -labels)
mean_std_set<-select(mean_std_set, -(-labels)
)
mean_std_set<-select(mean_std_set, -"-labels")
mean_std_set<-select(mean_std_set, -labels)
mean_std_set<-select(mean_std_set, --labels)
mean_std_set <-select(full_set, num_range("V", feature_match))
View(activity_labels)
View(activity_labels)
label_list<-as.list(full_labels)
label_list
?intersect
label_names<-intersect(full_labels$V1, activity_labels)
label_names<-intersect(full_labels, activity_labels)
label_names<-intersect(full_labels$V1, activity_labels$V2)
label_names<-intersect(activity_labels$V2, full_labels)
rm(label_names
)
?merge
label_names<-merge(activity_labels, full_labels)
head(label_names)
rm(label_names)
full_labels_names<-data.frame(labels=full_labels$labels, activities=activity_labels[match(full_labels$labels, activity_labels$V1), 2])
View(full_labels_names)
full_set<-mutate(full_set, activities = full_labels_names$activities)
View(full_set)
mean_std_set<-mutate(mean_std_set, activities = full_labels_names$activities)
mean_std_set<-mutate(mean_std_set, subject = full_subject$subject)
?bygroup
?groupby
library(data.frame)
library(data.table)
?groupby
?group_by
View(mean_std_set)
View(mean_std_set)
mean_std_set<-select(mean_std_set, -activities)
mean_std_set<-select(mean_std_set, -subject)
names(mean_std_set)<-mean_std_features[,2]
mean_std_set<-mutate(mean_std_set, activities = full_labels_names$activities)
mean_std_set<-mutate(mean_std_set, subject = full_subject$subject)
head(mean_std_set)
mean_std_by_activity<-group_by(mean_std_set, activities)
average_by_activity<-colMeans(mean_std_by_activity)
average_by_activity<-colMeans(mean_std_by_activity[,1:79])
average_by_activity<-summarize(mean_std_by_activity, avg_by_activity = mean(mean_std_by_activity[,1:79]))
average_by_activity<-summarize(mean_std_by_activity)
View(average_by_activity)
View(average_by_activity)
average_by_activity<-summarize(mean_std_by_activity, mean(mean_std_by_activity[,1:79]))
names(mean_std_by_activity)
summary<-summarise(mean_std_by_activity, mean(tBodyAcc-mean()-X))
summary<-summarise(mean_std_by_activity, mean("tBodyAcc-mean()-X"))
class(mean_std_by_activity$tBodyAcc-mean()-X)
class(mean_std_by_activity[,1])
test_tbl<-select(mean_std_set, activities, subject, tBodyAcc-mean()-X)
View(features)
mean_std_set<-sub("-", "_", names(mean_std_set))
names(mean_std_set)
mean_std_set <-select(full_set, num_range("V", feature_match))
mean_std_features<-filter(features, features$V1 %in% feature_match)
names(mean_std_set)<-mean_std_features[,2]
sub("-", "_", names(mean_std_set))
names(mean_std_set)
mean_std_set<-rename(mean_std_set, sub("-", "_", names(mean_std_set)))
names(mean_std_set)<-sub("-", "_", names(mean_std_set))
names(mean_std_set)
mean_std_set<-rename(mean_std_set, sub("()", "", names(mean_std_set)))
names(mean_std_set)<-sub("()", "", names(mean_std_set))
names(mean_std_set)
names(mean_std_set)<-gsub("-", "_", names(mean_std_set))
names(mean_std_set)<-gsub("()", "", names(mean_std_set))
names(mean_std_set)
names(mean_std_set)<-gsub("()", "", names(mean_std_set))
names(mean_std_set)
mean_std_set<-mutate(mean_std_set, activities = full_labels_names$activities)
mean_std_set<-mutate(mean_std_set, subject = full_subject$subject)
head(mean_std_set)
test_tbl<-select(mean_std_set, activities, subject, tBodyAcc_mean()_X)
library(dplyr)
names(mean_std_set)<-gsub("\(\)", "", names(mean_std_set))
names(mean_std_set)<-gsub("()", "", names(mean_std_set), fixed="TRUE")
names(mean_std_set)
test_tbl<-select(mean_std_set, activities, subject, tBodyAcc_mean_X)
head(test_tbl)
grouped_test<-group_by(test_tbl, activities)
summary<-test<-summarise(grouped_tst, mean(tBodyAcc_mean_X))
summary_test<-summarise(grouped_test, mean(tBodyAcc_mean_X))
summary_test
mean_std_by_activity<-group_by(mean_std_set, activities)
summary<-summarise(mean_std_by_activity, mean(mean_std_by_activity[,1:79]))
mean_std_by_activity<-group_by(mean_std_set, activities)
summary<-summarise(mean_std_by_activity, mean)
mean_std_by_activity<-group_by(mean_std_set, activities)
summary<-summarise(mean_std_by_activity, mean(tBodyAcc_mean_X))
summary
mean_std_by_activity<-group_by(mean_std_set, activities)
summary<-summarise(mean_std_by_activity, mean(1:79))
summary
rm(summary)
?summarise_each
mean_std_by_activity %>% group_by(activities) %>% summarise_each(funs(mean))
mean_std_grouped %>% group_by(activities, subject) %>% summarise_each(funs(mean))
mean_std_grouped<-group_by(mean_std_set, activities, subject)
mean_std_grouped %>% group_by(activities, subject) %>% summarise_each(funs(mean))
arrange(mean_std_grouped, subject)
arrange(mean_std_grouped, subject==1)
mean_std_grouped %>% summarise_each(funs(mean))
write.table(mean_std_grouped, file = "tidy_data.txt", row.names = FALSE )
View(mean_std_grouped)
View(mean_std_grouped)
mean_std_grouped %>% summarise_each(funs(mean))
group_sum<-mean_std_grouped %>% summarise_each(funs(mean))
write.table(group_sum, file = "tidy_data.txt", row.names = FALSE )
View(group_sum)
View(group_sum)
arrange(group_sum, subject)
View(mean_std_grouped)
View(mean_std_grouped)
mean_std_grouped<-mean_std_set %>%
group_by(activities,subject)%>%
summarise_each(funs(mean))
View(mean_std_grouped)
View(mean_std_grouped)
##Reading in data
features<-read.table("./features.txt",header = FALSE, sep = "", stringsAsFactors = FALSE) ##List of all features
activity_labels<-read.table("./activity_labels.txt",header = FALSE, sep = "") ##Links the class labels with their activity name.
##Train files
subject_train<-read.table("./train/subject_train.txt",header = FALSE, sep = "") ## Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30.
X_train<-read.table("./train/X_train.txt",header = FALSE, sep = "") ## Training set.
y_train<-read.table("./train/y_train.txt",header = FALSE, sep = "") ## Training labels.
##Test files
subject_test<-read.table("./test/subject_test.txt",header = FALSE, sep = "") ## as per subject_train
X_test<-read.table("./test/X_test.txt",header = FALSE, sep = "") ## Test set.
y_test<-read.table("./test/y_test.txt",header = FALSE, sep = "") ## Test labels.
##Librarys for clean up
library(dplyr)
library(tidyr)
library(data.table)
##1. Merges the training and the test sets to create one data set.
full_set<-rbind(X_test, X_train)
full_subject<-rbind(subject_test, subject_train)
full_subject<-rename(full_subject, subject = V1)
full_labels<-rbind(y_test, y_train)
full_labels<-rename(full_labels, labels = V1)
##2. Extracts only the measurements on the mean and standard deviation for each measurement.
toMatch <- c("-mean", "-std")
feature_match <- unique(grep(paste(toMatch,collapse="|"),
features$V2))
#match_std<-grep("-std()", features$V2, fixed = TRUE)
#match_mean<-grep("-mean()", features$V2, fixed = TRUE)
##selecting variables in full_set that contain "mean()" and "std()" (also includes meanFreq())
mean_std_set <-select(full_set, num_range("V", feature_match))
mean_std_features<-filter(features, features$V1 %in% feature_match)
##4. Appropriately labels the data set with descriptive variable names.
##convert features to variable headings
names(mean_std_set)<-mean_std_features[,2]
##edit variable names to remove"-" and "()"
names(mean_std_set)<-gsub("-", "_", names(mean_std_set))
names(mean_std_set)<-gsub("()", "", names(mean_std_set), fixed="TRUE")
##3. Uses descriptive activity names to name the activities in the data set
##add descriptions to activities in full_labels
full_labels_names<-data.frame(labels=full_labels$labels,
activities=activity_labels[match(full_labels$labels,
activity_labels$V1), 2])
##add descriptions to mean_std_set
mean_std_set<-mutate(mean_std_set, activities = full_labels_names$activities)
##also add subjects
mean_std_set<-mutate(mean_std_set, subject = full_subject$subject)
##5.From the data set in step 4, creates a second, independent tidy data set with
##the average of each variable for each activity and each subject.
mean_std_grouped<-mean_std_set %>%
group_by(activities,subject)%>%
summarise_each(funs(mean))
#writes the tidy set to a file grouped_average.txt
write.table(mean_std_grouped, file = "tidy_data.txt", row.names = FALSE )
##Reading in data
features<-read.table("./features.txt",header = FALSE, sep = "", stringsAsFactors = FALSE) ##List of all features
activity_labels<-read.table("./train/activity_labels.txt",header = FALSE, sep = "") ##Links the class labels with their activity name.
##Train files
subject_train<-read.table("./train/subject_train.txt",header = FALSE, sep = "") ## Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30.
X_train<-read.table("./train/X_train.txt",header = FALSE, sep = "") ## Training set.
y_train<-read.table("./train/y_train.txt",header = FALSE, sep = "") ## Training labels.
##Test files
subject_test<-read.table("./test/subject_test.txt",header = FALSE, sep = "") ## as per subject_train
X_test<-read.table("./test/X_test.txt",header = FALSE, sep = "") ## Test set.
y_test<-read.table("./test/y_test.txt",header = FALSE, sep = "") ## Test labels.
##Librarys for clean up
library(dplyr)
library(tidyr)
library(data.table)
##1. Merges the training and the test sets to create one data set.
full_set<-rbind(X_test, X_train)
full_subject<-rbind(subject_test, subject_train)
full_subject<-rename(full_subject, subject = V1)
full_labels<-rbind(y_test, y_train)
full_labels<-rename(full_labels, labels = V1)
##2. Extracts only the measurements on the mean and standard deviation for each measurement.
toMatch <- c("-mean", "-std")
feature_match <- unique(grep(paste(toMatch,collapse="|"),
features$V2))
#match_std<-grep("-std()", features$V2, fixed = TRUE)
#match_mean<-grep("-mean()", features$V2, fixed = TRUE)
##selecting variables in full_set that contain "mean()" and "std()" (also includes meanFreq())
mean_std_set <-select(full_set, num_range("V", feature_match))
mean_std_features<-filter(features, features$V1 %in% feature_match)
##4. Appropriately labels the data set with descriptive variable names.
##convert features to variable headings
names(mean_std_set)<-mean_std_features[,2]
##edit variable names to remove"-" and "()"
names(mean_std_set)<-gsub("-", "_", names(mean_std_set))
names(mean_std_set)<-gsub("()", "", names(mean_std_set), fixed="TRUE")
##3. Uses descriptive activity names to name the activities in the data set
##add descriptions to activities in full_labels
full_labels_names<-data.frame(labels=full_labels$labels,
activities=activity_labels[match(full_labels$labels,
activity_labels$V1), 2])
##add descriptions to mean_std_set
mean_std_set<-mutate(mean_std_set, activities = full_labels_names$activities)
##also add subjects
mean_std_set<-mutate(mean_std_set, subject = full_subject$subject)
##5.From the data set in step 4, creates a second, independent tidy data set with
##the average of each variable for each activity and each subject.
mean_std_grouped<-mean_std_set %>%
group_by(activities,subject)%>%
summarise_each(funs(mean))
#writes the tidy set to a file grouped_average.txt
write.table(mean_std_grouped, file = "tidy_data.txt", row.names = FALSE )
tidy_data
read.table("./tidy_data")
read.table("./tidy_data.txt")
tidy_data<-read.table("./tidy_data.txt")
View(tidy_data)
View(tidy_data)
View(tidy_data)
